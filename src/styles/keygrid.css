/* Key, board, and grid styles
 * We use a base --keyboard-grid-unit variable, which lets us scale easily
 */

:root {
  --keyboard-grid-unit: 1rem;
  --kid-diamarg-width: calc(var(--keyboard-grid-unit) * 2);
}
@media (min-width: 900px) {
  :root {
    --keyboard-grid-unit: 1.25rem;
  }
}

/* A grid of keys, like a keyboard would have */
div.keygrid {
  display: grid;
  pointer-events: none;
  user-select: none;
}

/* A single key */
button.keyboard-key {
  padding: 0.25rem;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 0.125rem;
  font-family: monospace;
  pointer-events: auto;
  outline: none;
  position: relative;
  background-color: var(--button-bg-enabled);
  border: 1px solid var(--key-border);
  &:hover {
    background-color: var(--key-hover-bg);
  }
  &.active-key {
    background-color: var(--key-active-bg);
    border: 1px solid var(--key-active-border);
    &:hover {
      background-color: var(--key-active-hover-bg);
    }
  }
  &.related-to-active-key {
    background-color: var(--key-related-active-bg);
    border: 1px solid var(--key-related-active-border);
    &:hover {
      background-color: var(--key-related-active-hover-bg);
    }
  }
  &.diagram-target-key {
    background-color: var(--key-diagram-target-bg);
    border: 1px solid var(--key-diagram-target-border);
    &:hover {
      background-color: var(--key-diagram-target-hover-bg);
    }
  }
}

/* A key that's not part of a keygrid */
.standalone-key {
  display: inline-block;
}

/* A key handle, which is an invisible element inside a key that can be used as an anchor point in a diagram */
.key-handle {
  height: 0.25rem; /* h-1 */
  width: 0.25rem; /* w-1 */
  margin: 0; /* m-0 */
  padding: 0; /* p-0 */
  border: none; /* border-none */
  pointer-events: none; /* pointer-events-none */
  position: absolute; /* absolute */
}

/* An image used as a legend for a key */
img.key-legend {
  width: 1rem;
  height: 1rem;
}

/* Left and right thumb clusters of an ErgoDox keyboard */
.keyboard-left-thumb-cluster {
  transform: translateX(calc(var(--keyboard-grid-unit) * -2))
    translateY(calc(var(--keyboard-grid-unit) * 6)) rotate(25deg);
  transform-origin: 0 calc(var(--keyboard-grid-unit) * 2);
  padding-bottom: calc(var(--keyboard-grid-unit) * 9);
}
.keyboard-right-thumb-cluster {
  transform: translateX(calc(var(--keyboard-grid-unit) * 2))
    translateY(calc(var(--keyboard-grid-unit) * 6)) rotate(-25deg);
  transform-origin: calc(var(--keyboard-grid-unit) * 6)
    calc(var(--keyboard-grid-unit) * 2);
  padding-bottom: calc(var(--keyboard-grid-unit) * 9);
}

.kid-diamarg {
  width: var(--kid-diamarg-width);
}
.kid-center {
  width: calc(100% - (var(--kid-diamarg-width) * 2));
}
